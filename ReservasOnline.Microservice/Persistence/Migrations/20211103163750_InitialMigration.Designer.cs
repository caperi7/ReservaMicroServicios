// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservasOnline.Microservice.Persistence.DbContexts;

namespace ReservasOnline.Microservice.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211103163750_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Reserva")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReservasOnline.Microservice.Model.Aerolinea", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Aerolinea");

                    b.HasData(
                        new
                        {
                            Id = "642c07a6-01cb-45a1-837a-ef05ae4f1842",
                            Nombre = "LAN"
                        },
                        new
                        {
                            Id = "db195457-99f9-42b1-9346-d480c773214d",
                            Nombre = "AVIANCA"
                        },
                        new
                        {
                            Id = "04798c66-e7d0-42ca-b6ce-cb10a2f1c333",
                            Nombre = "SATENA"
                        });
                });

            modelBuilder.Entity("ReservasOnline.Microservice.Model.Aeropuerto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Aeropuerto");

                    b.HasData(
                        new
                        {
                            Id = "b57f1a35-8300-42c4-8238-fe5e30e1e9dd",
                            Nombre = "El Dorado / Bogotá"
                        },
                        new
                        {
                            Id = "2b18d0e5-190d-41b7-b581-70e7c4b22e00",
                            Nombre = "Rodríguez Ballón / Perú"
                        },
                        new
                        {
                            Id = "9bf1ca7b-a848-404a-86f3-e3e5c629a047",
                            Nombre = " Adolfo Suárez Madrid / Barajas"
                        },
                        new
                        {
                            Id = "4cc7cde3-98be-407b-80b9-3305c4d21347",
                            Nombre = "Albacete / Los Llanos"
                        },
                        new
                        {
                            Id = "1e20368f-8994-48cf-b135-35210c452432",
                            Nombre = "Paris Internacional / París"
                        });
                });

            modelBuilder.Entity("ReservasOnline.Microservice.Model.Reserva", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AerolineaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AeropuertoLLegadaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AeropuertoSalidaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("HoraLlegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroVuelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("TipoPasajeroId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AerolineaId");

                    b.HasIndex("AeropuertoLLegadaId");

                    b.HasIndex("AeropuertoSalidaId");

                    b.HasIndex("TipoPasajeroId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ReservasOnline.Microservice.Model.TipoPasajero", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoPasajero");

                    b.HasData(
                        new
                        {
                            Id = "c458918a-5b79-4e5a-b813-0e6232be7496",
                            Nombre = "Niño"
                        },
                        new
                        {
                            Id = "03de8ee1-936c-4849-a580-53f0a429aa8b",
                            Nombre = "Adulto"
                        });
                });

            modelBuilder.Entity("ReservasOnline.Microservice.Model.Reserva", b =>
                {
                    b.HasOne("ReservasOnline.Microservice.Model.Aerolinea", "Aerolinea")
                        .WithMany()
                        .HasForeignKey("AerolineaId");

                    b.HasOne("ReservasOnline.Microservice.Model.Aeropuerto", "AeropuertoLLegada")
                        .WithMany()
                        .HasForeignKey("AeropuertoLLegadaId");

                    b.HasOne("ReservasOnline.Microservice.Model.Aeropuerto", "AeropuertoSalida")
                        .WithMany()
                        .HasForeignKey("AeropuertoSalidaId");

                    b.HasOne("ReservasOnline.Microservice.Model.TipoPasajero", "TipoPasajero")
                        .WithMany()
                        .HasForeignKey("TipoPasajeroId");

                    b.Navigation("Aerolinea");

                    b.Navigation("AeropuertoLLegada");

                    b.Navigation("AeropuertoSalida");

                    b.Navigation("TipoPasajero");
                });
#pragma warning restore 612, 618
        }
    }
}
